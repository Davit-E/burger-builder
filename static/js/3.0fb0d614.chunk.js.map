{"version":3,"sources":["components/UI/Svg/SuccessSvg.js","containers/Checkout/ContactData/ContactData.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","containers/Checkout/ContactData/ContactData.module.css"],"names":["successSvg","id","className","xmlns","width","height","viewBox","fill","d","cx","cy","r","stroke","strokeWidth","strokeLinecap","points","withErrorHandler","dispatch","useDispatch","ingredients","useSelector","state","burger","price","totalPrice","loading","order","orderSent","token","auth","userId","useState","name","elemType","elemConfig","type","placeholder","value","validation","required","isValid","touched","email","street","zipCode","minLength","maxLength","deliveryMetod","options","displayOptions","orderForm","setOrderForm","useEffect","scrollToBottom","scrollEl","useRef","current","scrollIntoView","behavior","orderFormArr","key","push","Input","changed","event","inputKey","target","prevState","rules","trim","replace","length","checkValidity","inputChangedHandler","Object","entries","form","onSubmit","preventDefault","formFilled","formCopy","orderFormObj","toFixed","orderData","actionCreators","onSendOrderSuccessful","Button","btnType","Spinner","classes","SuccessText","href","OrderAgain","ContactData","ref","axios","input","props","inputElement","inputClasses","validationError","Invalid","ValidationError","join","onChange","map","el","label","module","exports"],"mappings":"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","file":"static/js/3.0fb0d614.chunk.js","sourcesContent":["import React from 'react';\r\n// import classes from './SuccessSvg.module.css';\r\nimport './SuccessSvg.css';\r\n\r\nconst successSvg = () => (\r\n  <svg\r\n    id='successAnimation'\r\n    className='animated'\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    width='70'\r\n    height='70'\r\n    viewBox='0 0 70 70'\r\n  >\r\n    <path\r\n      id='successAnimationResult'\r\n      fill='#D8D8D8'\r\n      d='M35,60 C21.1928813,60 10,48.8071187 10,35 C10,21.1928813 21.1928813,10 35,10 C48.8071187,10 60,21.1928813 60,35 C60,48.8071187 48.8071187,60 35,60 Z M23.6332378,33.2260427 L22.3667622,34.7739573 L34.1433655,44.40936 L47.776114,27.6305926 L46.223886,26.3694074 L33.8566345,41.59064 L23.6332378,33.2260427 Z'\r\n    />\r\n    <circle\r\n      id='successAnimationCircle'\r\n      cx='35'\r\n      cy='35'\r\n      r='24'\r\n      stroke='#979797'\r\n      strokeWidth='2'\r\n      strokeLinecap='round'\r\n      fill='transparent'\r\n    />\r\n    <polyline\r\n      id='successAnimationCheck'\r\n      stroke='#979797'\r\n      strokeWidth='2'\r\n      points='23 34 34 43 47 27'\r\n      fill='transparent'\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default successSvg;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport SuccessSvg from '../../../components/UI/Svg/SuccessSvg';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actionCreators from '../../../store/actions/index';\r\n\r\nconst ContactData = () => {\r\n  const dispatch = useDispatch();\r\n  const onSendOrder = () => dispatch(actionCreators.sendOrderStart());\r\n  const onSendOrderSuccessful = (order, token) =>\r\n    dispatch(actionCreators.sendOrderSuccessful(order, token));\r\n\r\n  const ingredients = useSelector((state) => state.burger.ingredients);\r\n  const price = useSelector((state) => state.burger.totalPrice);\r\n  const loading = useSelector((state) => state.order.loading);\r\n  const orderSent = useSelector((state) => state.order.orderSent);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const userId = useSelector((state) => state.auth.userId);\r\n\r\n  const [orderForm, setOrderForm] = useState({\r\n    name: {\r\n      elemType: 'input',\r\n      elemConfig: {\r\n        type: 'text',\r\n        placeholder: 'Name',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n      },\r\n      isValid: false,\r\n      touched: false,\r\n    },\r\n    email: {\r\n      elemType: 'input',\r\n      elemConfig: {\r\n        type: 'email',\r\n        placeholder: 'Email',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n      },\r\n      isValid: false,\r\n      touched: false,\r\n    },\r\n    street: {\r\n      elemType: 'input',\r\n      elemConfig: {\r\n        type: 'text',\r\n        placeholder: 'Street',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n      },\r\n      isValid: false,\r\n      touched: false,\r\n    },\r\n    zipCode: {\r\n      elemType: 'input',\r\n      elemConfig: {\r\n        type: 'text',\r\n        placeholder: 'ZIP Code',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n        maxLength: 5,\r\n      },\r\n      isValid: false,\r\n      touched: false,\r\n    },\r\n    deliveryMetod: {\r\n      elemType: 'select',\r\n      elemConfig: {\r\n        options: [\r\n          {\r\n            value: 'fastest',\r\n            displayOptions: 'Fastest',\r\n          },\r\n          {\r\n            value: 'cheapest',\r\n            displayOptions: 'Cheapest',\r\n          },\r\n        ],\r\n      },\r\n      value: 'fastest',\r\n      validation: {\r\n        required: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, []);\r\n\r\n  const scrollEl = useRef();\r\n\r\n  const scrollToBottom = () => {\r\n    scrollEl.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    if (rules.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n      isValid = value.replace(/\\s/g, '').length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n      isValid = value.replace(/\\s/g, '').length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const orderHandler = (event) => {\r\n    event.preventDefault();\r\n    let formFilled = true;\r\n    let formCopy = { ...orderForm };\r\n\r\n    for (const [key, value] of Object.entries(orderForm)) {\r\n      formCopy[key] = { ...orderForm[key], touched: true };\r\n      if (value.validation.required && !value.isValid) {\r\n        formFilled = false;\r\n      }\r\n    }\r\n\r\n    if (formFilled) {\r\n      let orderFormObj = {};\r\n      for (const key in orderForm) {\r\n        orderFormObj[key] = orderForm[key].value;\r\n      }\r\n\r\n      const order = {\r\n        ingredients: ingredients,\r\n        price: price.toFixed(2),\r\n        userId: userId,\r\n        orderData: orderFormObj,\r\n      };\r\n\r\n      onSendOrder();\r\n      onSendOrderSuccessful(order, token);\r\n    } else {\r\n      setOrderForm(formCopy);\r\n    }\r\n  };\r\n\r\n  const inputChangedHandler = (event, inputKey) => {\r\n    let value = event.target.value;\r\n    setOrderForm((prevState) => {\r\n      let isValid = checkValidity(value, prevState[inputKey].validation);\r\n      return {\r\n        ...prevState,\r\n        [inputKey]: {\r\n          ...prevState[inputKey],\r\n          value,\r\n          isValid,\r\n          touched: true,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  let orderFormArr = [];\r\n  for (let [key, value] of Object.entries(orderForm)) {\r\n    orderFormArr.push(\r\n      <Input\r\n        key={key}\r\n        {...value}\r\n        changed={(event) => inputChangedHandler(event, key)}\r\n      />\r\n    );\r\n  }\r\n\r\n  let form = (\r\n    <form onSubmit={orderHandler}>\r\n      <h4>Enter your contact info:</h4>\r\n      {orderFormArr}\r\n      <Button btnType='Success'>Order</Button>\r\n    </form>\r\n  );\r\n\r\n  if (loading) {\r\n    form = <Spinner />;\r\n  }\r\n\r\n  if (orderSent) {\r\n    form = (\r\n      <>\r\n        <SuccessSvg />\r\n        <h3 className={classes.SuccessText}>Your Burger Is on the Way!</h3>\r\n        <a href='/' className={classes.OrderAgain}>\r\n          Order Again?\r\n        </a>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id='ContactData' className={classes.ContactData}>\r\n      {form}\r\n      <div ref={scrollEl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorHandler(ContactData, axios);\r\n","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  let inputClasses = [classes.Input];\r\n  let validationError = null;\r\n  if (!props.isValid && props.validation.required && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n    validationError = <p className={classes.ValidationError}>Please enter a valid {props.elemConfig.placeholder}</p>\r\n  }\r\n\r\n  if (props.elemType === 'textarea') {\r\n    inputElement = (\r\n      <textarea\r\n        className={inputClasses.join(' ')}\r\n        value={props.value}\r\n        {...props.elemConfig}\r\n        onChange={props.changed}\r\n      />\r\n    );\r\n  } else if (props.elemType === 'select') {\r\n    inputElement = (\r\n      <select\r\n        className={inputClasses.join(' ')}\r\n        value={props.value}\r\n        onChange={props.changed}\r\n      >\r\n        {props.elemConfig.options.map((el) => {\r\n          return (\r\n            <option key={el.value} value={el.value}>\r\n              {el.displayOptions}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    );\r\n  } else {\r\n    inputElement = (\r\n      <input\r\n        className={inputClasses.join(' ')}\r\n        value={props.value}\r\n        {...props.elemConfig}\r\n        onChange={props.changed}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {validationError}\r\n      <label>{props.label}</label>\r\n      {inputElement}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__13nT7\",\"Invalid\":\"Input_Invalid__14qdl\",\"ValidationError\":\"Input_ValidationError__3wz4Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__31rn2\",\"SuccessText\":\"ContactData_SuccessText__117LD\",\"OrderAgain\":\"ContactData_OrderAgain__1DgUJ\"};"],"sourceRoot":""}