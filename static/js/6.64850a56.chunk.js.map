{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","containers/Orders/Orders.module.css","components/Order/Order.module.css"],"names":["order","props","ingredients","Object","entries","key","value","charAt","toUpperCase","slice","className","classes","Order","price","withErrorHandler","useState","ordersList","setOrders","loading","setLoading","token","useSelector","state","auth","userId","useEffect","axios","get","params","orderBy","equalTo","then","orders","ordersArr","data","push","id","catch","err","console","log","redirect","to","Spinner","length","map","Orders","module","exports"],"mappings":"oMAsBeA,EAnBD,SAACC,GAGb,IAFA,IAAIC,EAAc,eAElB,MAAyBC,OAAOC,QAAQH,EAAMC,aAA9C,eAA4D,CAAC,IAAD,sBAAlDG,EAAkD,KAA7CC,EAA6C,KAC1DJ,GAAW,WAAQG,EAAIE,OAAO,GAAGC,cAAgBH,EAAII,MAAM,GAAhD,aAAuDH,EAAvD,MAKb,OAFAJ,EAAcA,EAAYO,MAAM,GAAI,GAGlC,yBAAKC,UAAWC,IAAQC,OACtB,2BAAIV,GACJ,qCACS,8CAAgBD,EAAMY,MAAtB,S,sCCsDAC,uBA7DA,WAAO,IAAD,EACaC,mBAAS,IADtB,mBACZC,EADY,KACAC,EADA,OAEWF,oBAAS,GAFpB,mBAEZG,EAFY,KAEHC,EAFG,KAIbC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,SAC1CI,EAASH,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,UAEjDC,qBAAU,WACJL,GACFM,IACGC,IAAI,eAAgB,CACnBC,OAAQ,CACNL,KAAMH,EACNS,QAAS,WACTC,QAAQ,IAAD,OAAMN,EAAN,QAGVO,MAAK,SAACC,GAGL,IAFA,IAAIC,EAAY,GAEhB,MAAyB9B,OAAOC,QAAQ4B,EAAOE,MAA/C,eAAsD,CAAC,IAAD,sBAA5C7B,EAA4C,KAAvCC,EAAuC,KACpD2B,EAAUE,KAAV,aAAiBC,GAAI/B,GAAQC,IAE/BW,EAAUgB,GACVd,GAAW,MAEZkB,OAAM,SAACC,GACNnB,GAAW,GACXoB,QAAQC,IAAIF,QAGjB,CAAClB,EAAOI,IAEX,IAAIiB,EAAW,KACVrB,IACHqB,EAAW,kBAAC,IAAD,CAAUC,GAAG,oBAE1B,IAAIV,EAAS,kBAACW,EAAA,EAAD,MAgBb,OAdKzB,IAGDc,EAFGhB,EAAW4B,OAEL5B,EAAW6B,KAAI,SAAC7C,GACvB,OACE,kBAACY,EAAD,CACEV,YAAaF,EAAME,YACnBW,MAAOb,EAAMa,MACbR,IAAKL,EAAMoC,QAPc,uDAcjC,yBAAK1B,UAAWC,IAAQmC,QACrBd,EACAS,KAKiCf,M,mBCrExCqB,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/6.64850a56.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n  let ingredients = 'Ingredients:';\r\n\r\n  for (let [key, value] of Object.entries(props.ingredients)) {\r\n    ingredients += ` ${key.charAt(0).toUpperCase() + key.slice(1)} (${value}),`;\r\n  }\r\n\r\n  ingredients = ingredients.slice(0, -1);\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>{ingredients}</p>\r\n      <p>\r\n        Price: <strong>{`USD ${props.price}$`}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from './Orders.module.css';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Orders = () => {\r\n  const [ordersList, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const token = useSelector((state) => state.auth.token);\r\n  const userId = useSelector((state) => state.auth.userId);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios\r\n        .get('/orders.json', {\r\n          params: {\r\n            auth: token,\r\n            orderBy: '\"userId\"',\r\n            equalTo: `\"${userId}\"`,\r\n          },\r\n        })\r\n        .then((orders) => {\r\n          let ordersArr = [];\r\n\r\n          for (let [key, value] of Object.entries(orders.data)) {\r\n            ordersArr.push({ id: key, ...value });\r\n          }\r\n          setOrders(ordersArr);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [token, userId]);\r\n\r\n  let redirect = null;\r\n  if (!token) {\r\n    redirect = <Redirect to='burger-builder' />;\r\n  }\r\n  let orders = <Spinner />;\r\n\r\n  if (!loading) {\r\n    if (!ordersList.length) orders = <p>You haven't ordered yet</p>;\r\n    else {\r\n      orders = ordersList.map((order) => {\r\n        return (\r\n          <Order\r\n            ingredients={order.ingredients}\r\n            price={order.price}\r\n            key={order.id}\r\n          />\r\n        );\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.Orders}>\r\n      {orders}\r\n      {redirect}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorHandler(Orders, axios);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"Orders_Orders___98k6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3Cdlb\"};"],"sourceRoot":""}