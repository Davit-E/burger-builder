{"version":3,"sources":["store/actions/actionTypes.ts","store/actions/burgerBuilder.ts","store/actions/order.ts","store/actions/auth.ts","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.ts","components/Burger/Burger.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Spinner/Spinner.tsx","components/Burger/BurgerIngredient/BurgerIngredient.tsx","components/Burger/Burger.tsx","components/UI/Backdrop/Backdrop.tsx","components/UI/Modal/Modal.tsx","components/Navigation/Toolbar/Toolbar.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Burger/OrderSummary/OrderSummary.module.css","components/UI/Button/Button.tsx","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Modal/Modal.module.css","components/UI/Button/Button.module.css","containers/BurgerBuilder/BurgerBuilder.module.css","hoc/withErrorHandler/withErrorHandler.tsx","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/UI/Backdrop/Backdrop.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","hoc/Layout/Layout.module.css","components/UI/Spinner/Spinner.module.css","components/Logo/Logo.tsx","components/Navigation/NavigationItems/NavigationItem/NaviagtionItem.tsx","components/Navigation/NavigationItems/NavigationItems.tsx","components/Navigation/SideDrawer/SideDrawer.tsx","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.tsx","components/Navigation/Toolbar/Toolbar.tsx","hoc/Layout/Layout.tsx","components/Burger/BuildControls/BuildControl/BuildControl.tsx","components/Burger/BuildControls/BuildControls.tsx","components/Burger/OrderSummary/OrderSummary.tsx","containers/BurgerBuilder/BurgerBuilder.tsx","App.tsx","serviceWorker.ts","store/reducers/burgerBuilder.ts","store/reducers/order.ts","store/reducers/auth.ts","rootReducer.ts","index.tsx"],"names":["actionTypes","addIngredient","ingName","type","ADD_INGREDIENT","ingredientName","removeIngredient","REMOVE_INGREDIENT","initIngredients","dispatch","ingredients","axios","get","then","res","arr","data","i","length","el","Object","keys","values","INIT_INGREDIENTS","catch","err","FETCH_INGREDIENTS_FAILED","ordering","ORDERING","notOrdering","NOT_ORDERING","initOrder","INIT_ORDER","sendOrderStart","SEND_ORDER_START","sendOrderSuccessful","order","token","post","SEND_ORDER_SUCCESSFUL","SEND_ORDER_FAILED","authSuccess","userId","userEmail","AUTH_SUCCESS","authLogout","localStorage","removeItem","AUTH_LOGOUT","authLogoutTimeout","expirationTime","setTimeout","auth","email","password","isSignIn","AUTH_START","authData","returnSecureToken","url","expirationDate","Date","now","expiresIn","setItem","idToken","localId","toString","error","response","message","AUTH_FAIL","authCheckstate","getItem","module","exports","instance","create","baseURL","spinner","className","classes","Loader","ingredientChoices","BreadBottom","Cheese_drip","Shadow","BreadTop","meat","Meat","cheese","Cheese","tomato","Tomato","onion","Onion","salad","Salad","burgerIngredient","props","burger","allIngredients","entries","key","value","push","BurgerIngredient","burgerWrapperClass","BurgerWrapper","burgerClass","Burger","isInBuilder","BurgerWrapperInBuilder","BurgerInBuilder","join","backdrop","show","Backdrop","onClick","clicked","React","memo","modalClass","Modal","Show","children","modalClosed","prevProps","nextProps","button","buttonClass","Button","btnType","withErrorHandler","WrappedComponent","useState","setError","initialized","setInitialized","useEffect","reqInterceptror","interceptors","request","use","req","resInterceptror","eject","logo","Logo","href","navigationItem","isSideNav","NavigationItem","isAuth","logout","to","link","activeClassName","active","NavigationItems","useDispatch","useSelector","state","navigationItems","navClicked","actionCreators","sideDrawer","openOrClosed","open","Open","Closed","sideDrawerClasses","SideDrawer","drawerToggle","DrawerToggle","openDrawer","toolbar","Toolbar","DesktopOnly","Layout","sideDrawerState","setSideDrawerState","sideDrawerToggleHandler","prevState","buildControl","BuildControl","Label","label","Less","disabled","removed","More","added","controls","buildControls","controlsArr","map","ctrl","ingredientAdded","ingredientRemoved","BuildControls","Content","price","toFixed","ordered","OrderButton","purchasable","orderSummary","ingredientSummary","style","textTransform","OrderSummary","OrderHeader","padding","Ingredients","purchaseCanceled","purchaseContinued","purchasing","setPurchasing","totalPrice","orderSent","building","purchaseCancelHandler","burgerStuff","Spinner","disabledInfo","redirect","history","pathname","some","quantity","updatePurchaseable","BurgerBuilder","Checkout","lazy","Orders","Auth","App","fallback","exact","path","component","Boolean","window","location","hostname","match","initialState","INGREDIENT_PRICES","action","newIngredients","newPrice","deleteIngredient","reducer","loading","errorMessages","EMAIL_NOT_FOUND","INVALID_PASSWORD","USER_DISABLED","EMAIL_EXISTS","OPERATION_NOT_ALLOWED","TOO_MANY_ATTEMPTS_TRY_LATER","authFail","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","app","StrictMode","basename","process","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.fb5fae04.chunk.js","sourcesContent":["enum actionTypes {\r\n  ADD_INGREDIENT = 'ADD_INGREDIENT',\r\n  REMOVE_INGREDIENT = 'REMOVE_INGREDIENT',\r\n  INIT_INGREDIENTS = 'INIT_INGREDIENTS',\r\n  FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED',\r\n  ORDERING = 'ORDERING',\r\n  NOT_ORDERING = 'NOT_ORDERING',\r\n  SEND_ORDER_START = 'SEND_ORDER_START',\r\n  SEND_ORDER_SUCCESSFUL = 'SEND_ORDER_SUCCESSFUL',\r\n  SEND_ORDER_FAILED = 'SEND_ORDER_FAILED',\r\n  INIT_ORDER = 'INIT_ORDER',\r\n  AUTH_START = 'AUTH_START',\r\n  AUTH_SUCCESS = 'AUTH_SUCCESS',\r\n  AUTH_FAIL = 'AUTH_FAIL',\r\n  AUTH_LOGOUT = 'AUTH_LOGOUT',\r\n  AUTH = 'AUTH',\r\n}\r\n\r\nexport default actionTypes;\r\n","import actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\nimport { AppThunk } from '../../types/appThunk';\r\n\r\ninterface KeyAsString {\r\n  [key: string]: any;\r\n}\r\n\r\nexport const addIngredient = (ingName: string) => {\r\n  return {\r\n    type: actionTypes.ADD_INGREDIENT,\r\n    ingredientName: ingName,\r\n  };\r\n};\r\n\r\nexport const removeIngredient = (ingName: string) => {\r\n  return {\r\n    type: actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName: ingName,\r\n  };\r\n};\r\n\r\nexport const initIngredients = (): AppThunk => (dispatch) => {\r\n  let ingredients: KeyAsString = {};\r\n  axios\r\n    .get('/ingredients/some.json')\r\n    .then((res) => {\r\n      let arr = res.data;\r\n      for (let i = 0; i < arr.length; i++) {\r\n        const el = arr[i];\r\n        ingredients[Object.keys(el)[0]] = Object.values(el)[0];\r\n      }\r\n\r\n      dispatch({\r\n        type: actionTypes.INIT_INGREDIENTS,\r\n        ingredients: ingredients,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n        ingredients: ingredients,\r\n      });\r\n    });\r\n};\r\n\r\nexport const ordering = () => {\r\n  return {\r\n    type: actionTypes.ORDERING,\r\n  };\r\n};\r\nexport const notOrdering = () => {\r\n  return {\r\n    type: actionTypes.NOT_ORDERING,\r\n  };\r\n};\r\n","import actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\nimport { AppThunk } from '../../types/appThunk';\r\nimport {OrderInterface as Order} from '../../types/order_interface';\r\n\r\nexport const initOrder = () => {\r\n  return {\r\n    type: actionTypes.INIT_ORDER,\r\n  };\r\n};\r\n\r\nexport const sendOrderStart = () => {\r\n  return {\r\n    type: actionTypes.SEND_ORDER_START,\r\n  };\r\n};\r\n\r\nexport const sendOrderFailed = () => {\r\n  return {\r\n    type: actionTypes.SEND_ORDER_FAILED,\r\n  };\r\n};\r\n\r\nexport const sendOrderSuccessful = (order: Order, token: string): AppThunk => (dispatch) => {\r\n  axios\r\n    .post('/orders.json?auth=' + token, order)\r\n    .then(() => {\r\n      dispatch({\r\n        type: actionTypes.SEND_ORDER_SUCCESSFUL,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(sendOrderFailed());\r\n    });\r\n};\r\n","import actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nimport { AppThunk } from '../../types/appThunk';\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (\r\n  token: string,\r\n  userId: string,\r\n  userEmail: string\r\n) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    token: token,\r\n    userId: userId,\r\n    userEmail: userEmail,\r\n  };\r\n};\r\n\r\nexport const authFail = (error: string) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('userId');\r\n  localStorage.removeItem('expirationDate');\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const authLogoutTimeout = (expirationTime: number): AppThunk => (\r\n  dispatch\r\n) => {\r\n  setTimeout(() => {\r\n    dispatch(authLogout());\r\n  }, expirationTime * 1000);\r\n};\r\n\r\nexport const auth = (\r\n  email: string,\r\n  password: string,\r\n  isSignIn: boolean\r\n): AppThunk => (dispatch) => {\r\n  dispatch(authStart());\r\n  let authData = {\r\n    email: email,\r\n    password: password,\r\n    returnSecureToken: true,\r\n  };\r\n  let API_KEY = 'AIzaSyB_9h1E3D6pkhGrf-RUeSVhFSBiiklmqdw';\r\n  let url =\r\n    'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=';\r\n  if (!isSignIn) {\r\n    url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=';\r\n  }\r\n\r\n  axios\r\n    .post(url + API_KEY, authData)\r\n    .then((res) => {\r\n      let expirationDate = Date.now() + res.data.expiresIn * 1000;\r\n      localStorage.setItem('token', res.data.idToken);\r\n      localStorage.setItem('userId', res.data.localId);\r\n      localStorage.setItem('userEmail', email);\r\n      localStorage.setItem('expirationDate', expirationDate.toString());\r\n      dispatch(authSuccess(res.data.idToken, res.data.localId, email));\r\n      dispatch(authLogoutTimeout(res.data.expiresIn));\r\n    })\r\n    .catch((err) => {\r\n      dispatch(authFail(err.response.data.error.message));\r\n    });\r\n};\r\n\r\nexport const authCheckstate = (): AppThunk => (dispatch) => {\r\n  let token = localStorage.getItem('token');\r\n  let userId = localStorage.getItem('userId');\r\n  let userEmail = localStorage.getItem('userEmail');\r\n\r\n  if (token) {\r\n    let expirationDate = +localStorage.getItem('expirationDate')!;\r\n    if (expirationDate <= Date.now()) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      dispatch(authSuccess(token, userId!, userEmail!));\r\n      dispatch(authLogoutTimeout((expirationDate - Date.now()) / 1000));\r\n    }\r\n  } else {\r\n    dispatch(authLogout());\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Shadow\":\"BurgerIngredient_Shadow__29AHU\",\"BreadTop\":\"BurgerIngredient_BreadTop__3TV-E\",\"BreadBottom\":\"BurgerIngredient_BreadBottom__1Dz_G\",\"Tomato\":\"BurgerIngredient_Tomato__34Fbr\",\"Onion\":\"BurgerIngredient_Onion__2oT7_\",\"Meat\":\"BurgerIngredient_Meat__3tz3S\",\"Salad\":\"BurgerIngredient_Salad__1lInQ\",\"Cheese\":\"BurgerIngredient_Cheese__28d3R\",\"drip\":\"BurgerIngredient_drip__kRm5g\",\"Cheese_drip\":\"BurgerIngredient_Cheese_drip__3vr-k\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://burger-builder-da45f.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerWrapper\":\"Burger_BurgerWrapper__22z4k\",\"Burger\":\"Burger_Burger__37pR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1BhRP\",\"Open\":\"SideDrawer_Open__pkgRT\",\"Closed\":\"SideDrawer_Closed__1AOm0\",\"Logo\":\"SideDrawer_Logo__1Y-q5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1inPj\",\"Label\":\"BuildControl_Label__3YAfh\",\"Less\":\"BuildControl_Less__FI681\",\"More\":\"BuildControl_More__eD2Mr\"};","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => {\r\n  return <div className={classes.Loader}>Loading...</div>;\r\n};\r\n\r\nexport default spinner;\r\n","import React from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport { IngredientTypes } from '../../../types/ingredientTypes_interface';\r\n\r\ninterface BurgerIngredientProps {\r\n  type: IngredientTypes;\r\n  key?: string;\r\n}\r\n\r\ntype IngredientChoices = {\r\n  [key in IngredientTypes]: JSX.Element;\r\n}\r\n\r\nconst ingredientChoices: IngredientChoices = {\r\n  'bread-bottom': (\r\n    <>\r\n      <div className={classes.BreadBottom}></div>\r\n      <div className={classes.Cheese_drip}></div>\r\n      <div className={classes.Shadow}></div>\r\n    </>\r\n  ),\r\n  'bread-top': (\r\n    <div className={classes.BreadTop}>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  ),\r\n  meat: <div className={classes.Meat}></div>,\r\n  cheese: (\r\n    <>\r\n      <div className={classes.Cheese}></div>\r\n    </>\r\n  ),\r\n  tomato: <div className={classes.Tomato}></div>,\r\n  onion: <div className={classes.Onion}></div>,\r\n  salad: <div className={classes.Salad}></div>,\r\n};\r\n\r\nconst burgerIngredient = (props: BurgerIngredientProps) => {\r\n  if (ingredientChoices[props.type]) {\r\n    return ingredientChoices[props.type];\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default burgerIngredient;\r\n","import React from 'react';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport classes from './Burger.module.css';\r\nimport { Ingredients } from '../../types/ingredients_interface';\r\nimport { IngredientTypes } from '../../types/ingredientTypes_interface';\r\n\r\ninterface BurgerProps {\r\n  ingredients: Ingredients;\r\n  isInBuilder?: boolean;\r\n}\r\n\r\nconst burger = (props: BurgerProps) => {\r\n  const allIngredients = [];\r\n  for (const [key, value] of Object.entries(props.ingredients)) {\r\n    for (let i = 0; i < value; i++) {\r\n      allIngredients.push(\r\n        <BurgerIngredient type={key as IngredientTypes} key={`${value}${key}${i}`} />\r\n      );\r\n    }\r\n  }\r\n\r\n  if (allIngredients.length === 0) {\r\n    allIngredients.push(<p key=\"startAdding\">Start adding!</p>);\r\n  }\r\n\r\n  let burgerWrapperClass = [classes.BurgerWrapper];\r\n  let burgerClass = [classes.Burger];\r\n\r\n  if(props.isInBuilder) {\r\n    burgerWrapperClass.push(classes.BurgerWrapperInBuilder);\r\n    burgerClass.push(classes.BurgerInBuilder);\r\n  }\r\n  return (\r\n      <div className={burgerClass.join(' ')}>\r\n        <BurgerIngredient type=\"bread-top\" />\r\n        {allIngredients}\r\n        <BurgerIngredient type=\"bread-bottom\" />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default burger;\r\n","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\ninterface BackdropProps {\r\n  show: boolean;\r\n  clicked: () => void;\r\n}\r\n\r\nconst backdrop = (props: BackdropProps) => {\r\n  return props.show ? (\r\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n  ) : null;\r\n};\r\n\r\nexport default backdrop;\r\n","import React from 'react';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport classes from './Modal.module.css';\r\n\r\ninterface ModalProps {\r\n  show: any;\r\n  children: React.ReactNode;\r\n  modalClosed: () => void;\r\n}\r\n\r\nconst modal = (props: ModalProps) => {\r\n  let modalClass = [classes.Modal];\r\n  if (props.show) modalClass.push(classes.Show);\r\n  return (\r\n    <>\r\n      <div className={modalClass.join(' ')}>{props.children}</div>\r\n      <Backdrop show={props.show} clicked={props.modalClosed} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst checkShow = (prevProps: ModalProps, nextProps: ModalProps) =>\r\n  prevProps.show === nextProps.show &&\r\n  prevProps.children === nextProps.children;\r\n\r\nexport default React.memo(modal, checkShow);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2FuQa\",\"nav\":\"Toolbar_nav__27aWK\",\"Logo\":\"Toolbar_Logo__3OqHf\",\"DesktopOnly\":\"Toolbar_DesktopOnly__RiG9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__mPMEq\",\"Content\":\"BuildControls_Content__8MTyQ\",\"OrderButton\":\"BuildControls_OrderButton__sgppe\",\"enable\":\"BuildControls_enable__q_AyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderSummary\":\"OrderSummary_OrderSummary__3uXbG\",\"OrderHeader\":\"OrderSummary_OrderHeader__w6dlE\",\"Ingredients\":\"OrderSummary_Ingredients__1AoEg\"};","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\ninterface ButtonProps {\r\n  btnType: 'Danger' | 'Success';\r\n  clicked?: () => void;\r\n  children?: string;\r\n}\r\n\r\nconst button = (props: ButtonProps) => {\r\n  let buttonClass = [classes.Button, classes[props.btnType]];\r\n  return (\r\n    <button onClick={props.clicked} className={buttonClass.join(' ')}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default button;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__swymw\",\"active\":\"NavigationItem_active__1ho74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1su-Q\",\"Show\":\"Modal_Show__3sq-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2I4Rn\",\"Success\":\"Button_Success__34OIE\",\"Danger\":\"Button_Danger__2YUtZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerBuilder\":\"BurgerBuilder_BurgerBuilder__3fs9D\",\"BurgerWrapper\":\"BurgerBuilder_BurgerWrapper__yirTh\"};","import { AxiosError, AxiosInstance, AxiosResponse } from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\n\r\nconst withErrorHandler = <T extends any>(\r\n  WrappedComponent: React.FC<T>,\r\n  axios: AxiosInstance\r\n) => {\r\n  return (props: any) => {\r\n    const [error, setError] = useState<AxiosError | null>(null);\r\n    const [initialized, setInitialized] = useState<boolean | null>(null);\r\n\r\n    useEffect(() => {\r\n      const reqInterceptror = axios.interceptors.request.use((req) => {\r\n        setError(null);\r\n        return req;\r\n      });\r\n      const resInterceptror = axios.interceptors.response.use(\r\n        (res: AxiosResponse) => res,\r\n        (err: AxiosError) => {\r\n          setError(err);\r\n        }\r\n      );\r\n      setInitialized(true);\r\n      return () => {\r\n        axios.interceptors.request.eject(reqInterceptror);\r\n        axios.interceptors.response.eject(resInterceptror);\r\n      };\r\n    }, []);\r\n\r\n    const errorConfirmedHandler = () => {\r\n      setError(null);\r\n    };\r\n\r\n    if (!initialized) return null;\r\n    return (\r\n      <>\r\n        <Modal show={error} modalClosed={errorConfirmedHandler}>\r\n          {error ? error.message : null}\r\n        </Modal>\r\n        <WrappedComponent {...props} />\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__afarv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__20Eu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2g_dB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1D9Fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1mS1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__jEC7A\",\"load6\":\"Spinner_load6__3v3Xw\",\"round\":\"Spinner_round__1FaVl\"};","import React from 'react';\r\nimport classes from './Logo.module.css';\r\nimport Burger from '../Burger/Burger';\r\nimport { Ingredients } from '../../types/ingredients_interface';\r\n\r\nconst ingredients: Ingredients = {\r\n  salad: 1,\r\n  tomato: 1,\r\n  onion: 1,\r\n  cheese: 1,\r\n  meat: 1,\r\n};\r\n\r\nconst logo = () => {\r\n  return (\r\n    <a className={classes.Logo} href='/burger-builder'>\r\n      {/* <img src={burgerLogo} alt='My Buger' /> */}\r\n      <Burger ingredients={ingredients} />\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default logo;\r\n","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface NavigationItemProps {\r\n  isSideNav: boolean;\r\n  clicked: () => void;\r\n  link: string;\r\n  isAuth?: boolean\r\n  logout?: () => void;\r\n  children: string;\r\n}\r\n\r\nconst navigationItem = (props: NavigationItemProps) => {\r\n  let clicked = props.isSideNav ? props.clicked : null;\r\n\r\n  let clickFunc = () => {\r\n    if (clicked) {\r\n      clicked();\r\n    }\r\n    if (props.isAuth) {\r\n      props.logout!();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className={classes.NavigationItem} onClick={clickFunc}>\r\n      <NavLink to={props.link} activeClassName={classes.active}>\r\n        {props.children}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default navigationItem;\r\n","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NaviagtionItem';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actionCreators from '../../../store/actions/index';\r\nimport { RootState } from '../../../rootReducer';\r\n\r\ninterface NavigationItemsProps {\r\n  isSideNav?: boolean;\r\n  navClicked?: () => void;\r\n}\r\n\r\nconst NavigationItems = (props: NavigationItemsProps) => {\r\n  const dispatch = useDispatch();\r\n  const onLogout = () => dispatch(actionCreators.authLogout());\r\n  const onNotOrdering = () => dispatch(actionCreators.notOrdering());\r\n  const isAuth = useSelector((state: RootState) => state.auth.userId != null);\r\n\r\n  let logoutFunc = () => {\r\n    onLogout();\r\n    onNotOrdering();\r\n  };\r\n\r\n  let navigationItems = (\r\n    <NavigationItem\r\n      isSideNav={props.isSideNav!}\r\n      clicked={props.navClicked!}\r\n      link='/auth'\r\n    >\r\n      Sign In\r\n    </NavigationItem>\r\n  );\r\n\r\n  if (isAuth) {\r\n    navigationItems = (\r\n      <>\r\n        <NavigationItem\r\n          isSideNav={props.isSideNav!}\r\n          clicked={props.navClicked!}\r\n          link='/orders'\r\n        >\r\n          Orders\r\n        </NavigationItem>\r\n\r\n        <NavigationItem\r\n          isSideNav={props.isSideNav!}\r\n          clicked={props.navClicked!}\r\n          isAuth={isAuth}\r\n          logout={logoutFunc}\r\n          link='/logout'\r\n        >\r\n          Log Out\r\n        </NavigationItem>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className={classes.NavigationItems}>\r\n      <NavigationItem\r\n        isSideNav={props.isSideNav!}\r\n        clicked={props.navClicked!}\r\n        link='/'\r\n      >\r\n        Burger Builder\r\n      </NavigationItem>\r\n      {navigationItems}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavigationItems;\r\n","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport classes from './SideDrawer.module.css';\r\n\r\ninterface SideDrawerProps {\r\n  open: boolean;\r\n  clicked: () => void;\r\n  navClicked: () => void;\r\n}\r\n\r\nconst sideDrawer = (props: SideDrawerProps) => {\r\n  let openOrClosed = props.open ? classes.Open : classes.Closed;\r\n  let sideDrawerClasses = [classes.SideDrawer, openOrClosed];\r\n  return (\r\n    <>\r\n      <Backdrop show={props.open} clicked={props.clicked} />\r\n      <div className={sideDrawerClasses.join(' ')}>\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems isSideNav={props.open} navClicked={props.navClicked} />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\ninterface DrawerToggleProps {\r\n  openDrawer: () => void;\r\n}\r\n\r\nconst drawerToggle = (props: DrawerToggleProps) => {\r\n  return (\r\n    <div className={classes.DrawerToggle} onClick={props.openDrawer}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default drawerToggle;\r\n","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nimport classes from './Toolbar.module.css';\r\n\r\ninterface ToolbarProps {\r\n  openDrawer: () => void;\r\n}\r\n\r\nconst toolbar = (props: ToolbarProps) => {\r\n  return (\r\n    <header className={classes.Toolbar}>\r\n      <div className={classes.Logo}>\r\n        <Logo />\r\n      </div>\r\n      <DrawerToggle openDrawer={props.openDrawer} />\r\n      <nav className={classes.DesktopOnly}>\r\n        <NavigationItems />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default toolbar;\r\n","import React, { useState } from 'react';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport classes from './Layout.module.css';\r\n\r\nconst Layout = (props: { children: React.ReactNode }) => {\r\n  const [sideDrawerState, setSideDrawerState] = useState<boolean>(false);\r\n\r\n  const sideDrawerToggleHandler = () => {\r\n    setSideDrawerState((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Layout}>\r\n      <Toolbar openDrawer={sideDrawerToggleHandler} />\r\n      <SideDrawer\r\n        open={sideDrawerState}\r\n        clicked={sideDrawerToggleHandler}\r\n        navClicked={sideDrawerToggleHandler}\r\n      />\r\n      <main>{props.children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport actionTypes from '../../../../store/actions/actionTypes';\r\nimport { Ingredients } from '../../../../types/ingredients_interface';\r\nimport classes from './BuildControl.module.css';\r\n\r\n\r\ninterface BuildControlProps {\r\n  added: (\r\n    ingName: string\r\n  ) => {\r\n    type: actionTypes;\r\n    ingredientName: string;\r\n  };\r\n  removed: (\r\n    ingName: string\r\n  ) => {\r\n    type: actionTypes;\r\n    ingredientName: string;\r\n  };\r\n  disabled: boolean;\r\n  key: string;\r\n  label: string;\r\n  type: string\r\n}\r\n\r\n\r\nconst buildControl = (props: BuildControlProps) => {\r\n  return (\r\n    <div className={classes.BuildControl}>\r\n      <div className={classes.Label}>{props.label}</div>\r\n      <button\r\n        className={classes.Less}\r\n        disabled={props.disabled}\r\n        onClick={() => props.removed(props.type)}\r\n      >\r\n        -\r\n      </button>\r\n      <button className={classes.More} onClick={() => props.added(props.type)}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport actionTypes from '../../../store/actions/actionTypes';\r\nimport { Ingredients } from '../../../types/ingredients_interface';\r\n\r\ninterface BuildControlsProps {\r\n  ingredientAdded: (\r\n    ingName: string\r\n  ) => {\r\n    type: actionTypes;\r\n    ingredientName: string;\r\n  };\r\n  ingredientRemoved: (\r\n    ingName: string\r\n  ) => {\r\n    type: actionTypes;\r\n    ingredientName: string;\r\n  };\r\n  disabled: Ingredients;\r\n  price: number;\r\n  purchasable: boolean;\r\n  ordered: () => void;\r\n}\r\n\r\nconst controls = [\r\n  { label: 'Salad', type: 'salad' },\r\n  { label: 'Tomato', type: 'tomato' },\r\n  { label: 'Onion', type: 'onion' },\r\n  { label: 'Cheese', type: 'cheese' },\r\n  { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props: BuildControlsProps) => {\r\n  const controlsArr = controls.map((ctrl) => (\r\n    <BuildControl\r\n      key={ctrl.label}\r\n      label={ctrl.label}\r\n      type={ctrl.type}\r\n      added={props.ingredientAdded}\r\n      removed={props.ingredientRemoved}\r\n      disabled={props.disabled[ctrl.type]}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n      <div className={classes.Content}>\r\n        {controlsArr}\r\n        <p>Current Price: {props.price.toFixed(2)}$</p>\r\n        <button\r\n          onClick={props.ordered}\r\n          className={classes.OrderButton}\r\n          disabled={!props.purchasable}\r\n        >\r\n          Order\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControls;\r\n","import React from 'react';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './OrderSummary.module.css';\r\nimport { Ingredients } from '../../../types/ingredients_interface';\r\n\r\ninterface OrderSummaryProps {\r\n  ingredients: Ingredients;\r\n  price: number;\r\n  purchaseCanceled: () => void;\r\n  purchaseContinued: () => void;\r\n}\r\n\r\nconst orderSummary = (props: OrderSummaryProps) => {\r\n  const ingredientSummary = Object.entries(props.ingredients).map(\r\n    ([key, value]) => {\r\n      return (\r\n        <li key={key + value}>\r\n          <strong>\r\n            <span style={{ textTransform: 'capitalize' }}>{key}</span>:\r\n          </strong>{' '}\r\n          {value}\r\n        </li>\r\n      );\r\n    }\r\n  );\r\n  return (\r\n    <div className={classes.OrderSummary}>\r\n      <h1 className={classes.OrderHeader}>Your Order</h1>\r\n      <ul style={{ padding: 'none' }} className={classes.Ingredients}>\r\n        {ingredientSummary}\r\n      </ul>\r\n      <p>Total Price: {props.price.toFixed(2)}$</p>\r\n      <p>Continue to Checkout?</p>\r\n      <div>\r\n        <Button btnType='Danger' clicked={props.purchaseCanceled}>\r\n          CANCEL\r\n        </Button>\r\n        <Button btnType='Success' clicked={props.purchaseContinued}>\r\n          CONTINUE\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default orderSummary;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport classes from './BurgerBuilder.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport { Ingredients } from '../../types/ingredients_interface';\r\nimport { RootState } from '../../rootReducer';\r\n\r\nconst BurgerBuilder = (props: {\r\n  history: {\r\n    pathname: string;\r\n  }[];\r\n}) => {\r\n  const [purchasing, setPurchasing] = useState<boolean>(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const onAddIngredient = (ingName: string) =>\r\n    dispatch(actionCreators.addIngredient(ingName));\r\n  const onRemoveIngredient = (ingName: string) =>\r\n    dispatch(actionCreators.removeIngredient(ingName));\r\n  const onInitIngredients = () => dispatch(actionCreators.initIngredients());\r\n  const onOrdering = () => dispatch(actionCreators.ordering());\r\n  const onNotOrdering = () => dispatch(actionCreators.notOrdering());\r\n  const onInitOrder = () => dispatch(actionCreators.initOrder());\r\n\r\n  const ingredients = useSelector(\r\n    (state: RootState) => state.burger.ingredients\r\n  );\r\n  const totalPrice = useSelector((state: RootState) => state.burger.totalPrice);\r\n  const error = useSelector((state: RootState) => state.burger.error);\r\n  const orderSent = useSelector((state: RootState) => state.order.orderSent);\r\n  const isAuth = useSelector((state: RootState) => state.auth.userId != null);\r\n  const building = useSelector((state: RootState) => state.burger.building);\r\n\r\n  useEffect(() => {\r\n    if (!building || ingredients === null || orderSent) {\r\n      onNotOrdering();\r\n      onInitOrder();\r\n      onInitIngredients();\r\n    }\r\n  }, []);\r\n\r\n  const updatePurchaseable = (ingredients: Ingredients) => {\r\n    const canPurchase = Object.values(ingredients).some(\r\n      (quantity) => quantity > 0\r\n    );\r\n    return canPurchase;\r\n  };\r\n\r\n  const purchaseHandler = () => {\r\n    setPurchasing(true);\r\n  };\r\n  const purchaseCancelHandler = () => {\r\n    setPurchasing(false);\r\n  };\r\n\r\n  const purchaseContinueHandler = () => {\r\n    // const obj = {\r\n    //   ...ingredients,\r\n    //   totalPrice: totalPrice,\r\n    // };\r\n\r\n    // const queryParams = new URLSearchParams(obj).toString();\r\n    // props.history.push({\r\n    // pathname: '/checkout',\r\n    // search: queryParams,\r\n    // state: obj,\r\n    // });\r\n    onOrdering();\r\n    let redirect = isAuth ? '/checkout' : '/auth';\r\n    props.history.push({ pathname: redirect });\r\n  };\r\n\r\n  let orderSummary = null;\r\n  let burgerStuff = !error ? (\r\n    <Spinner />\r\n  ) : (\r\n    <p>Ingredients can't be loaded...</p>\r\n  );\r\n\r\n  if (ingredients) {\r\n    const disabledInfo = { ...ingredients };\r\n\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n\r\n    orderSummary = (\r\n      <OrderSummary\r\n        ingredients={ingredients}\r\n        price={totalPrice}\r\n        purchaseCanceled={purchaseCancelHandler}\r\n        purchaseContinued={purchaseContinueHandler}\r\n      />\r\n    );\r\n\r\n    burgerStuff = (\r\n      <>\r\n        <div className={classes.BurgerWrapper}>\r\n          <Burger ingredients={ingredients} isInBuilder={true} />\r\n        </div>\r\n        <BuildControls\r\n          ingredientAdded={onAddIngredient}\r\n          ingredientRemoved={onRemoveIngredient}\r\n          disabled={disabledInfo}\r\n          price={totalPrice}\r\n          purchasable={updatePurchaseable(ingredients)}\r\n          ordered={purchaseHandler}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.BurgerBuilder}>\r\n      <Modal show={purchasing} modalClosed={purchaseCancelHandler}>\r\n        {orderSummary}\r\n      </Modal>\r\n      {burgerStuff}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);\r\n","import React, { Suspense, lazy, useEffect } from 'react';\r\nimport './App.css';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actionCreators from './store/actions/index';\r\nimport Spinner from './components/UI/Spinner/Spinner';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nconst Checkout = lazy(() => import('./containers/Checkout/Checkout'));\r\nconst Orders = lazy(() => import('./containers/Orders/Orders'));\r\nconst Auth = lazy(() => import('./containers/Auth/Auth'));\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const onCheckAuthState = () => dispatch(actionCreators.authCheckstate());\r\n    onCheckAuthState();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Layout>\r\n        <Suspense fallback={<Spinner />}>\r\n          <Switch>\r\n            <Route exact path='/' component={BurgerBuilder} />\r\n            <Route path='/checkout' component={Checkout} />\r\n            <Route path='/orders' component={Orders} />\r\n            <Route path='/auth' component={Auth} />\r\n            <Redirect to='/' />\r\n          </Switch>\r\n        </Suspense>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import actionTypes from '../actions/actionTypes';\r\nimport {\r\n  BurgerBuilderState,\r\n  BurgerBuilderActionType,\r\n} from '../../types/burgerBuilderState_interface';\r\nimport { Ingredients } from '../../types/ingredients_interface';\r\n\r\nconst initialState: BurgerBuilderState = {\r\n  ingredients: null,\r\n  totalPrice: 4,\r\n  error: false,\r\n  building: false,\r\n  ordering: false,\r\n};\r\n\r\nconst INGREDIENT_PRICES: Ingredients = {\r\n  salad: 0.3,\r\n  cheese: 0.8,\r\n  meat: 1.3,\r\n  tomato: 0.5,\r\n  onion: 0.3,\r\n};\r\n\r\nconst addIngredient = (\r\n  state: BurgerBuilderState,\r\n  action: BurgerBuilderActionType,\r\n  newIngredients: Ingredients,\r\n  newPrice: number\r\n) => {\r\n  newIngredients[action.ingredientName!]++;\r\n  newPrice = state.totalPrice + INGREDIENT_PRICES[action.ingredientName!];\r\n  return {\r\n    ...state,\r\n    ingredients: newIngredients,\r\n    totalPrice: newPrice,\r\n    building: true,\r\n  };\r\n};\r\nconst deleteIngredient = (\r\n  state: BurgerBuilderState,\r\n  action: BurgerBuilderActionType,\r\n  newIngredients: Ingredients,\r\n  newPrice: number\r\n) => {\r\n  if (state.ingredients![action.ingredientName!] <= 0) {\r\n    return;\r\n  }\r\n  newIngredients[action.ingredientName!]--;\r\n  newPrice = state.totalPrice - INGREDIENT_PRICES[action.ingredientName!];\r\n  return {\r\n    ...state,\r\n    ingredients: newIngredients,\r\n    totalPrice: newPrice,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action: BurgerBuilderActionType) => {\r\n  const newIngredients = { ...state.ingredients! };\r\n  let newPrice = 0;\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return addIngredient(\r\n        state,\r\n        action,\r\n        newIngredients,\r\n        newPrice\r\n      ) as BurgerBuilderState;\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return deleteIngredient(\r\n        state,\r\n        action,\r\n        newIngredients,\r\n        newPrice\r\n      ) as BurgerBuilderState;\r\n    case actionTypes.INIT_INGREDIENTS:\r\n      return {\r\n        totalPrice: 4,\r\n        ingredients: action.ingredients,\r\n        error: false,\r\n        building: false,\r\n        ordering: false,\r\n      } as BurgerBuilderState;\r\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n      return {\r\n        ...state,\r\n        ingredients: action.ingredients,\r\n        error: true,\r\n      } as BurgerBuilderState;\r\n    case actionTypes.ORDERING:\r\n      return {\r\n        ...state,\r\n        ingredients: state.ingredients,\r\n        ordering: true,\r\n      } as BurgerBuilderState;\r\n    case actionTypes.NOT_ORDERING:\r\n      return {\r\n        ...state,\r\n        ingredients: null,\r\n        ordering: false,\r\n      } as BurgerBuilderState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import actionTypes from '../actions/actionTypes';\r\nimport {OrderState, OrderActionType} from '../../types/orderState_interface';\r\n\r\nconst initialState: OrderState = {\r\n  loading: false,\r\n  orderSent: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action: OrderActionType) => {\r\n  switch (action.type) {\r\n    case actionTypes.SEND_ORDER_START:\r\n      return {\r\n        loading: true,\r\n        orderSent: false,\r\n      };\r\n    case actionTypes.SEND_ORDER_SUCCESSFUL:\r\n      return {\r\n        loading: false,\r\n        orderSent: true,\r\n      };\r\n    case actionTypes.SEND_ORDER_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case actionTypes.INIT_ORDER:\r\n      return {\r\n        loading: false,\r\n        orderSent: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import actionTypes from '../actions/actionTypes';\r\nimport { AuthState, AuthActionType } from '../../types/authState_interface';\r\n\r\ninterface KeyAsString {\r\n  [key: string]: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  token: null,\r\n  userId: null,\r\n  userEmail: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst errorMessages: KeyAsString = {\r\n  EMAIL_NOT_FOUND: 'Email not found!',\r\n  INVALID_PASSWORD: 'Invalid password!',\r\n  USER_DISABLED: 'User is disabled!',\r\n  EMAIL_EXISTS: 'Email already exists!',\r\n  OPERATION_NOT_ALLOWED: 'Operation is not allowed!',\r\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'Too many attempts, please try later...',\r\n};\r\n\r\nconst authStart = () => {\r\n  return {\r\n    token: null,\r\n    userId: null,\r\n    userEmail: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n};\r\n\r\nconst authSuccess = (action: AuthActionType) => {\r\n  return {\r\n    token: action.token,\r\n    userId: action.userId,\r\n    userEmail: action.userEmail,\r\n    error: null,\r\n    loading: false,\r\n  };\r\n};\r\n\r\nconst authFail = (state: AuthState, action: AuthActionType) => {\r\n  let error = errorMessages[action.error!];\r\n  return {\r\n    ...state,\r\n    error: error,\r\n    loading: false,\r\n  };\r\n};\r\n\r\nconst authLogout = () => {\r\n  return {\r\n    token: null,\r\n    userId: null,\r\n    userEmail: null,\r\n    error: null,\r\n    loading: false,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action: AuthActionType) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart() as AuthState;\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(action) as AuthState;\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action) as AuthState;\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout() as AuthState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  burger: burgerBuilderReducer,\r\n  order: orderReducer,\r\n  auth: authReducer,\r\n});\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createStore, applyMiddleware} from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}